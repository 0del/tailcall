---
version: 1.0.0
server:
  baseURL: https://jsonplaceholder.typicode.com

# Schemas to be using in endpoints
schemas:
  - &Geo
    type: object
    fields:
      - name: lat
        required: true
        schema:
          type: String

      - name: lng
        required: true
        schema:
          type: String
  - &Address
    type: object
    fields:
      - name: street
        required: true
        schema:
          type: String

      - name: suite
        required: true
        schema:
          type: String

      - name: city
        required: true
        schema:
          type: String

      - name: zipcode
        required: true
        schema:
          type: String

      - name: geo
        required: false
        schema: *Geo
  - &Post
    type: object
    fields:
      - name: userId
        required: true
        schema:
          type: Integer

      - name: id
        required: true
        schema:
          type: Integer

      - name: title
        required: true
        schema:
          type: String

      - name: body
        required: true
        schema:
          type: String
  - &IdList
    type: array
    item:
      type: ID
  - &UserId
    type: object
    fields:
      - name: userId
        schema:
          type: String

  - &User
    type: object
    fields:
      - name: id
        required: true
        schema:
          type: ID

      - name: name
        required: true
        schema:
          type: String

      - name: email
        required: true
        schema:
          type: String

      - name: address
        required: false
        schema: *Address

# List of endpoints
operations:
  - &getUsers
    operation:
      type: http
      method: GET
      path: "/users"
    output:
      type: array
      item: *User

  - &getPosts
    operation: &getPostsOperation
      type: http
      method: GET
      path: "/posts"
    output: &getPostsOutput
      type: array
      item: *Post

  - &getUserPosts
    operation:
      <<: *getPostsOperation
      query:
        - name: userId
          value: ${parent, id}
    input:
      type: object
      fields:
        - name: parent
          schema: *User
    output: *getPostsOutput

  - &getPostUser
    input:
      type: object
      fields:
        - name: id
          schema:
            type: ID
    output: *User
    operation:
      type: http
      method: GET
      path: /users/${parent.id}

graphQL:
  connections:
    Query:
      users:
        operations:
          - *getUsers
      posts:
        operations:
          - *getPosts
    User:
      posts:
        operations:
          - *getUserPosts

    Post:
      user:
        operations:
          - *getPostUser
